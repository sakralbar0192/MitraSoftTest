{"version":3,"sources":["components/UI/Loader/loader.module.scss","components/ResidentCard/residentCard.module.scss","app.module.scss","services/AddressService.js","store/redusers/addressReduser.js","controllers/AddressController.js","hooks/useCatching.js","components/UI/Loader/Loader.jsx","components/UI/SearchSelect/SearchSelect.jsx","components/AddressSection/AddressSection.jsx","components/ResidentCard/ResidentCard.jsx","services/ResidentsService.js","store/redusers/residentsReduser.js","controllers/ResidentsController.js","components/AddResidentForm/AddResidentForm.jsx","utils/index.js","components/AppModal/AppModal.jsx","components/ResidentsSection/ResidentsSection.jsx","App.jsx","store/redusers/index.js","store/index.js","index.js","components/AddressSection/addressSection.module.scss","components/ResidentsSection/residentsSection.module.scss"],"names":["module","exports","AddressService","a","axios","get","then","res","data","streetId","houseId","actionTypes","initialState","street","house","address","isAddressEnteredFull","addressId","streets","houses","flats","AddressControllers","dispatch","getStreets","type","payload","getHouses","getFlats","streetName","houseName","flatName","Addressid","useCatching","callback","useState","isLoading","setIsLoading","error","setError","fetching","p","message","Loader","className","cl","SearchSelect","options","placeholder","disabled","selectName","changeHandler","Option","Select","showSearch","style","width","optionFilterProp","onChange","id","option","name","undefined","map","AddressSection","selectsNames","useDispatch","addressState","useSelector","state","AddressController","fetchStreets","loadingError","isStreetsLoading","fetchHouses","housesloadingError","fetchFlats","flatsloadingError","useEffect","activityStatusHandler","length","selectChangeHandler","writeStreet","writeHouse","writeFlat","addAddressId","addressSection","addressSection__loader","addressSection__wrapper","addressSection__bigField","addressSection__smallField","ResidentCard","resident","deleteHandler","editHandler","Meta","Card","residentCard","actions","DeleteOutlined","onClick","bindId","EditOutlined","avatar","size","icon","UserOutlined","color","title","description","residentCard__description","PhoneOutlined","phone","email","MailOutlined","ResidentsService","params","post","residentId","addresId","requestBody","put","delete","ResidentsController","getAll","createResident","bindResident","BindId","removeResident","AddResidentForm","submitHandler","editedResident","inputsNames","Form","useForm","form","setFieldsValue","layout","onFinish","values","handledResident","autoComplete","onValuesChange","change","value","inputNumbersValue","replace","formatedInputValue","includes","substring","validateTelfield","toUpperCase","slice","initialValues","Item","label","rules","required","pattern","validateTrigger","messageVariables","htmlType","AppModal","isModalShow","handleCancel","display","alignItems","UserAddOutlined","fontSize","margin","footer","visible","onCancel","ResidentsSection","residentsState","residents","setResidents","setModalShow","setEdetedResident","getResidents","fetchResidents","residentsLoadingError","isResidentsLoading","removeResidentError","editResident","editResidentError","residentsSection","residentsSection__wrapper","residentSection__adressWrapper","residentSection__addButton","shape","residentsSection__residentsList","residentSection__residentItem","App","app","rootReduser","combineReducers","action","filter","el","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78ec0bfa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldio-wzu5q9yi9t\":\"loader_ldio-wzu5q9yi9t__3qHjm\",\"loadingio-spinner-ripple-m3n8nqi9o6f\":\"loader_loadingio-spinner-ripple-m3n8nqi9o6f__3zM3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"residentCard\":\"residentCard_residentCard__3frro\",\"residentCard__description\":\"residentCard_residentCard__description__3QgSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__2ipEO\"};","import axios from 'axios';\r\n\r\nclass AddressService {\r\n    async getStreets() {\r\n        return await axios.get('https://dispex.org/api/vtest/Request/streets')\r\n        .then(res => res.data)\r\n    }\r\n\r\n    async getHouses(streetId) {\r\n        return await axios.get(`https://dispex.org/api/vtest/Request/houses/${streetId}`)\r\n        .then(res => res.data)\r\n    }\r\n\r\n    async getFlats(houseId) {\r\n        return await axios.get(`https://dispex.org/api/vtest/Request/house_flats/${houseId}`)\r\n        .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport default new AddressService()","const actionTypes = {\r\n    ADD_STREETS: 'ADD_STREETS',\r\n    ADD_HOUSES: 'ADD_HOUSES',\r\n    ADD_FLATS: 'ADD_FLATS',\r\n    WRITE_STREET: 'WRITE_STREET',\r\n    WRITE_HOUSE: 'WRITE_HOUSE',\r\n    WRITE_FLAT: 'WRITE_FLAT',\r\n    ADD_ADDRESS_ID: 'ADD_ADDRESS_ID'\r\n}\r\n\r\nconst initialState = {    \r\n    street: '',\r\n    house: '',\r\n    address: '',\r\n    isAddressEnteredFull: false,\r\n    addressId: '',\r\n    streets: [],\r\n    houses: [],\r\n    flats: []\r\n}\r\n\r\nexport const addressReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_STREETS:\r\n            return {...state, streets: action.payload}\r\n        case actionTypes.ADD_HOUSES:\r\n            return {...state, houses: action.payload, flats: []}\r\n        case actionTypes.ADD_FLATS:\r\n            return {...state, flats: action.payload}\r\n        case actionTypes.WRITE_STREET:\r\n            return  {...state,\r\n                        isAddressEnteredFull: false, \r\n                        street: action.payload,\r\n                        addressId: ''\r\n                    }\r\n        case actionTypes.WRITE_HOUSE:\r\n            return  {...state, \r\n                        isAddressEnteredFull: false,\r\n                        house: action.payload,\r\n                        addressId: ''\r\n                    }\r\n        case actionTypes.WRITE_FLAT:\r\n            return  {...state, \r\n                        isAddressEnteredFull: true,\r\n                        address: `ул. ${state.street}, дом ${state.house}, ${action.payload}`                      \r\n                    }\r\n        case actionTypes.ADD_ADDRESS_ID: \r\n            return {...state, addressId: action.payload}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const addStreetsAction = (payload) => ({type: actionTypes.ADD_STREETS, payload})\r\nexport const addHousessAction = (payload) => ({type: actionTypes.ADD_HOUSES, payload})\r\nexport const addFlatsAction = (payload) => ({type: actionTypes.ADD_FLATS, payload})\r\nexport const writeStreetAction = (payload) => ({type: actionTypes.WRITE_STREET, payload})\r\nexport const writeHouseAction = (payload) => ({type: actionTypes.WRITE_HOUSE, payload})\r\nexport const writeFlatAction = (payload) => ({type: actionTypes.WRITE_FLAT, payload})\r\nexport const addAddressIdAction = (payload) => ({type: actionTypes.ADD_ADDRESS_ID, payload})","import AddressService from \"../services/AddressService\"\r\nimport { addAddressIdAction, addFlatsAction, addHousessAction, addStreetsAction, writeFlatAction, writeHouseAction, writeStreetAction } from \"../store/redusers/addressReduser\"\r\n\r\nclass AddressControllers {\r\n    getStreets() {\r\n        return async function (dispatch) {\r\n            await AddressService.getStreets()\r\n            .then(res => dispatch(addStreetsAction(res)))\r\n        }\r\n    }\r\n\r\n    getHouses(streetId) {\r\n        return async function (dispatch) {\r\n            await AddressService.getHouses(streetId)\r\n            .then(res => dispatch(addHousessAction(res)))\r\n        }\r\n    }\r\n\r\n    getFlats(houseId){        \r\n        return async function (dispatch) {            \r\n            await AddressService.getFlats(houseId)\r\n            .then(res=> dispatch(addFlatsAction(res)))\r\n        }\r\n    }\r\n\r\n    writeStreet(streetName) {\r\n        return function (dispatch) {\r\n            dispatch(writeStreetAction(streetName))\r\n        }\r\n    }\r\n\r\n    writeHouse(houseName) {\r\n        return function (dispatch) {\r\n            dispatch(writeHouseAction(houseName))\r\n        }\r\n    }\r\n\r\n    writeFlat(flatName) {\r\n        return function (dispatch) {\r\n            dispatch(writeFlatAction(flatName))\r\n        }\r\n    }\r\n\r\n    addAddressId(Addressid) {\r\n        return function (dispatch) {\r\n            dispatch(addAddressIdAction(Addressid))\r\n        }\r\n    }\r\n}\r\n\r\nexport default new AddressControllers()","import { useState } from 'react';\r\n\r\nexport function useCatching(callback)  {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async (p) => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback(p)\r\n        } catch (e) {\r\n            setError(e.message)    \r\n        } finally {\r\n            setIsLoading(false)\r\n        }    \r\n    }\r\n\r\n    return [fetching, error, isLoading]\r\n}","\r\nimport cl from './loader.module.scss'; \r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={cl['loadingio-spinner-ripple-m3n8nqi9o6f']}>\r\n            <div className={cl['ldio-wzu5q9yi9t']}>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import { Select } from 'antd'\r\nimport 'antd/dist/antd.css';\r\nimport PropTypes, { object } from 'prop-types';\r\n\r\nexport default function SearchSelect({options, placeholder, disabled, selectName, changeHandler}) {  \r\n    const { Option } = Select;\r\n\r\n    function onChange(id, option) {\r\n        changeHandler(selectName, id, option.name)\r\n    }\r\n\r\n    return (        \r\n        <Select\r\n            showSearch\r\n            style={{ width: \"100%\" }}\r\n            placeholder={placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange} \r\n            disabled={disabled}\r\n        >\r\n            {options !== undefined &&\r\n                options.map(option => {\r\n                    return (\r\n                        <Option \r\n                            key={option.id} \r\n                            id={option.id} \r\n                            name={option.name}\r\n                        >\r\n                            {option.name}\r\n                        </Option>\r\n                    )\r\n                })                \r\n            }\r\n        </Select>\r\n    )\r\n}\r\n\r\nSearchSelect.propTypes = {\r\n    options: PropTypes.arrayOf(object),\r\n    placeholder: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool,\r\n    selectName: PropTypes.string,\r\n    changeHandler: PropTypes.func\r\n}","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddressController from '../../controllers/AddressController';\r\nimport { useCatching } from '../../hooks/useCatching';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport SearchSelect from '../UI/SearchSelect/SearchSelect';\r\nimport cl from './addressSection.module.scss';\r\nimport { message } from 'antd';\r\n\r\n\r\nexport default function AddressSection() {\r\n    const selectsNames = {\r\n        STREETS: 'STREETS',\r\n        HOUSES: 'HOUSES',\r\n        FLATS: 'FLATS'\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addressState = useSelector(state=>state.address)\r\n    const streets = addressState.streets\r\n    const houses = addressState.houses\r\n    const flats = addressState.flats\r\n\r\n    const [fetchStreets, loadingError, isStreetsLoading] = useCatching(async()=> {\r\n       await dispatch(AddressController.getStreets())\r\n    })\r\n\r\n    const [fetchHouses, housesloadingError] = useCatching(async(id) => {\r\n        await dispatch(AddressController.getHouses(id))     \r\n    })\r\n    const [fetchFlats, flatsloadingError] = useCatching(async(id) => {\r\n       await dispatch(AddressController.getFlats(id))\r\n    })\r\n\r\n    useEffect(()=> {    \r\n        fetchStreets()    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if (loadingError) {\r\n            message.error(`${housesloadingError} Произошла ошибка при загрузке списка улиц`)\r\n        }\r\n        if (housesloadingError) {\r\n            message.error(`${housesloadingError} Произошла ошибка при загрузке списка домов`)\r\n        }\r\n        if (flatsloadingError) {\r\n            message.error(`${flatsloadingError} Произошла ошибка при загрузке списка квартир`)\r\n        }\r\n    },[housesloadingError, flatsloadingError, loadingError])\r\n  \r\n    const activityStatusHandler = (name) => {\r\n        switch (name) {\r\n            case selectsNames.STREETS:\r\n                return  streets.length > 0\r\n                            ? false\r\n                            : true\r\n            case selectsNames.HOUSES:\r\n                return  houses.length > 0\r\n                            ? false\r\n                            : true\r\n            case selectsNames.FLATS:\r\n                return  flats.length > 0\r\n                            ? false\r\n                            : true\r\n            default: \r\n            return false\r\n        }\r\n    }\r\n\r\n    const selectChangeHandler = (selectName, id, name) => {\r\n        switch (selectName) {\r\n            case selectsNames.STREETS:  \r\n                dispatch(AddressController.writeStreet(name))            \r\n                fetchHouses(id)\r\n                break   \r\n            case selectsNames.HOUSES:\r\n                dispatch(AddressController.writeHouse(name))\r\n                fetchFlats(id)\r\n                break  \r\n            case selectsNames.FLATS: \r\n                dispatch(AddressController.writeFlat(name)) \r\n                dispatch(AddressController.addAddressId(id)) \r\n                break\r\n            default: \r\n                return null\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <section className={cl.addressSection}>\r\n            <h2>Адрес</h2>\r\n            {isStreetsLoading \r\n                ? <div className={cl.addressSection__loader}>\r\n                    <Loader />\r\n                </div>\r\n                : <div className={cl.addressSection__wrapper}>\r\n                    <div className={cl.addressSection__bigField}>\r\n                        <SearchSelect\r\n                            placeholder=\"Улица\"\r\n                            options={streets}\r\n                            selectName={selectsNames.STREETS}\r\n                            disabled={activityStatusHandler(selectsNames.STREETS)}\r\n                            changeHandler = {selectChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className={cl.addressSection__smallField}>\r\n                        <SearchSelect\r\n                            placeholder=\"Дом\"\r\n                            options={houses}\r\n                            selectName={selectsNames.HOUSES}\r\n                            disabled={activityStatusHandler(selectsNames.HOUSES)}\r\n                            changeHandler = {selectChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className={cl.addressSection__smallField}>\r\n                        <SearchSelect\r\n                            placeholder=\"Кв/офис\" \r\n                            options={flats}\r\n                            selectName={selectsNames.FLATS}\r\n                            disabled={activityStatusHandler(selectsNames.FLATS)}\r\n                            changeHandler = {selectChangeHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n","import { Card, Avatar } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, UserOutlined, PhoneOutlined, MailOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport cl from './residentCard.module.scss'\r\n\r\nexport default function ResidentCard({resident, deleteHandler, editHandler}) {\r\n    const { Meta } = Card;\r\n\r\n    return (\r\n        <Card\r\n            className={cl.residentCard}            \r\n            actions={[\r\n                <DeleteOutlined  key=\"delete\" onClick={() => {deleteHandler(resident.bindId)}}/>,\r\n                <EditOutlined key=\"edit\" onClick={()=> {editHandler(resident)}} />\r\n            ]}\r\n        >            \r\n            <Meta\r\n                avatar={<Avatar size='medium' icon={<UserOutlined style={{color:'blue'}}/>} />}\r\n                title={resident.name}\r\n                description={\r\n                    <div className={cl.residentCard__description}>\r\n                        <div>\r\n                            <PhoneOutlined size=\"small\" /> \r\n                            <span>{resident.phone}</span>\r\n                        </div>\r\n                        {resident.email&&\r\n                            <div>\r\n                                <MailOutlined size=\"small\" /> \r\n                                <span>{resident.email}</span>\r\n                            </div>\r\n                        }                        \r\n                    </div>\r\n                }\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nResidentCard.propTypes = {\r\n    resident: PropTypes.object.isRequired,\r\n    deleteHandler: PropTypes.func.isRequired,\r\n    editHandler: PropTypes.func.isRequired\r\n}\r\n","import axios from 'axios';\r\n\r\nclass ResidentsService {\r\n    async getAll(addressId) {       \r\n        return await axios.get('https://dispex.org/api/vtest/HousingStock/clients', {\r\n            params: {\r\n                addressId\r\n            }\r\n        }).then(res => res.data)\r\n    }\r\n\r\n    async createResident(resident) {    \r\n        return await axios.post('https://dispex.org/api/vtest/HousingStock/client', resident, 'Content-Type: application/json-patch+json')\r\n        .then(res=>res.data.id)       \r\n    }\r\n\r\n    async bindResident(residentId, addresId) {\r\n        const requestBody = {\r\n            \"AddressId\": addresId,\r\n            \"ClientId\": residentId\r\n        }\r\n        return await axios.put('https://dispex.org/api/vtest/HousingStock/bind_client', requestBody, 'Content-Type: application/json-patch+json')  \r\n    }\r\n\r\n    async removeResident(id) {\r\n        await axios.delete(`https://dispex.org/api/vtest/HousingStock/bind_client/${id}`)\r\n    }\r\n}\r\n\r\nexport default new ResidentsService()","const actionTypes = {\r\n    ADD_RESIDENTS: 'ADD_RESIDENTS',\r\n    REMOVE_RESIDENT: 'REMOVE_RESIDENT'\r\n}\r\n\r\nconst initialState = []\r\n\r\nexport const residentsReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_RESIDENTS:\r\n            return [...action.payload]  \r\n        case actionTypes.REMOVE_RESIDENT:\r\n            return state.filter(el=> el.bindId !== action.payload)            \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const addResidentsAction = (payload) => ({type: actionTypes.ADD_RESIDENTS, payload})\r\nexport const removeResidentAction = (payload) => ({type: actionTypes.REMOVE_RESIDENT, payload})","import ResidentsService from \"../services/ResidentsService\"\r\nimport { addResidentsAction } from \"../store/redusers/residentsReduser\"\r\n\r\nclass ResidentsController {\r\n    getResidents(addressId) {\r\n        return async function (dispatch) {\r\n            await ResidentsService.getAll(addressId)\r\n            .then(res => dispatch(addResidentsAction(res)))\r\n        }\r\n    }\r\n\r\n    async createResident(resident) {\r\n        return await ResidentsService.createResident(resident)\r\n    }\r\n\r\n    async bindResident(residentId, addressId) {\r\n        await ResidentsService.bindResident(residentId, addressId)  \r\n    }\r\n\r\n    async removeResident(BindId) {\r\n        await ResidentsService.removeResident(BindId)\r\n    }\r\n}\r\n\r\nexport default new ResidentsController()","import { Form, Input, Button,  } from 'antd';\r\nimport { useEffect } from 'react';\r\nimport { validateNamefield, validateTelfield } from '../../utils';\r\n\r\nexport default function AddResidentForm({submitHandler, editedResident}) {\r\n    const inputsNames = {\r\n        NAME: 'name',\r\n        PHONE: 'phone',\r\n        MAIL: 'email'\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n    \r\n    let initialState={\r\n        [inputsNames.NAME]:'',\r\n        [inputsNames.PHONE]: '',\r\n        [inputsNames.MAIL]: '',\r\n        ...editedResident\r\n    }\r\n\r\n    useEffect(()=> {\r\n        form.setFieldsValue(initialState)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[initialState])\r\n\r\n    const onFinish = (values) => { \r\n        const handledResident = {...editedResident, ...values}  \r\n        submitHandler(handledResident)\r\n        form.setFieldsValue(initialState)\r\n      };\r\n\r\n    const valuesChange =(change)=> {\r\n        if (change[inputsNames.PHONE] !== undefined){\r\n            form.setFieldsValue({\r\n                [inputsNames.PHONE]: validateTelfield(change[inputsNames.PHONE])\r\n            })\r\n        }else if (change[inputsNames.NAME] !== undefined) {\r\n            form.setFieldsValue({\r\n                [inputsNames.NAME]: validateNamefield(change[inputsNames.NAME])\r\n            })\r\n        } else if (change[inputsNames.MAIL] !== undefined) {\r\n            form.setFieldsValue({\r\n                [inputsNames.MAIL]: (change[inputsNames.MAIL])\r\n            })\r\n        }\r\n\r\n              \r\n      }\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            name=\"basic\"\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n            autoComplete=\"off\"\r\n            onValuesChange={valuesChange}\r\n            initialValues={initialState}\r\n        >            \r\n            <Form.Item \r\n                label=\"Имя\" \r\n                name={inputsNames.NAME}\r\n                rules={[{ message: 'Введите имя' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Телефон\"\r\n                name={inputsNames.PHONE}\r\n                rules={[{ required: true, message: 'Введите телефон'}]}\r\n            >\r\n                <Input value='fdsf'/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name={inputsNames.MAIL}                \r\n                rules={[{ message: 'Введите почту', pattern: /\\S+@\\S+\\.\\S+/}]}\r\n                validateTrigger='onSubmit'\r\n                messageVariables='sad'\r\n            >\r\n                <Input placeholder=\"Введите электронную почту\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button \r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                >Submit</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","export function validateTelfield (value) {\r\n    let inputNumbersValue = value.replace(/\\D/g, '');\r\n    let formatedInputValue = '';\r\n\r\n    if (!inputNumbersValue) {\r\n        return value = '';\r\n    }    \r\n\r\n    if (['7', '8'].includes(inputNumbersValue[0])) {\r\n        const firstSimbols = inputNumbersValue[0] === '8' ? '8' : '+7';\r\n        formatedInputValue = firstSimbols + ' ';\r\n\r\n        if (inputNumbersValue.length > 1) {\r\n        formatedInputValue += '(' + inputNumbersValue.substring(1, 4);\r\n        }\r\n\r\n        if (inputNumbersValue.length >= 5) {\r\n        formatedInputValue += ') ' + inputNumbersValue.substring(4, 7);\r\n        }\r\n\r\n        if (inputNumbersValue.length >= 8) {\r\n        formatedInputValue += '-' + inputNumbersValue.substring(7, 9);\r\n        }\r\n\r\n        if (inputNumbersValue.length >= 10) {\r\n        formatedInputValue += '-' + inputNumbersValue.substring(9, 11);\r\n        }\r\n    } else {\r\n        formatedInputValue = '+7' + inputNumbersValue;\r\n    }     \r\n    return formatedInputValue\r\n};\r\n\r\n\r\nexport function validateNamefield (value) {\r\n    const formatedValue = value.length === 0\r\n        ?   ''\r\n        :   value[0].toUpperCase() + value.slice(1)\r\n    return formatedValue\r\n}","import { Modal } from 'antd';\r\nimport { UserAddOutlined } from '@ant-design/icons';\r\nimport AddResidentForm from '../AddResidentForm/AddResidentForm';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AppModal({ isModalShow, submitHandler, handleCancel, editedResident}) {    \r\n\r\n    return (        \r\n        <Modal \r\n            title={\r\n                <div style={{display:'flex', alignItems: 'center'}}>\r\n                    <UserAddOutlined style={{color:'blue', fontSize:'50px', margin:'0 20px 0 0'}} />\r\n                    <span>Добавить жильца</span>\r\n                </div>\r\n            }\r\n            footer={null} \r\n            visible={isModalShow} \r\n            onCancel={handleCancel}\r\n        >\r\n            <AddResidentForm \r\n                submitHandler={submitHandler}\r\n                editedResident={editedResident} \r\n            />\r\n        </Modal>         \r\n    )\r\n}\r\n\r\nAppModal.propTypes = {\r\n    isModalShow: PropTypes.bool.isRequired,\r\n    submitHandler: PropTypes.func.isRequired,\r\n    handleCancel: PropTypes.func.isRequired,\r\n    editedResident: PropTypes.func.isRequired\r\n}","import ResidentCard from '../ResidentCard/ResidentCard';\r\nimport { Button, message } from 'antd';\r\nimport { UserAddOutlined } from '@ant-design/icons';\r\nimport cl from './residentsSection.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useCatching } from '../../hooks/useCatching';\r\nimport ResidentsController from '../../controllers/ResidentsController';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport AppModal from '../AppModal/AppModal';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeResidentAction } from '../../store/redusers/residentsReduser';\r\n\r\nexport default function ResidentsSection() {\r\n    const dispatch = useDispatch()\r\n    const addressState =  useSelector(state => state.address)\r\n    const address = addressState.address\r\n    const isAddressEnteredFull = addressState.isAddressEnteredFull  \r\n    const addressId = addressState.addressId  \r\n    const residentsState = useSelector(state => state.residents)     \r\n    const [residents, setResidents] = useState([])\r\n    const [isModalShow, setModalShow] = useState(false)\r\n    const [editedResident, setEdetedResident] = useState({})\r\n\r\n    const [fetchResidents, residentsLoadingError, isResidentsLoading] = useCatching(async() => {\r\n        dispatch(ResidentsController.getResidents(addressId))\r\n    })\r\n\r\n    const [createResident] = useCatching(async(resident)=> {    \r\n        const residentId =  await ResidentsController.createResident(resident)\r\n        await ResidentsController.bindResident(residentId, addressId)\r\n        fetchResidents()\r\n    })\r\n\r\n    const [removeResident, removeResidentError] = useCatching(async (BindId)=> {\r\n        ResidentsController.removeResident(BindId)\r\n        dispatch(removeResidentAction(BindId))\r\n    })\r\n\r\n    const [editResident, editResidentError] = useCatching(async(resident)=>{\r\n        await removeResident(resident.bindId)\r\n        await createResident(resident)\r\n    })\r\n    \r\n    useEffect(() => {\r\n        setResidents([...residentsState])\r\n    },[residentsState])\r\n\r\n    useEffect(() => {\r\n        if (isAddressEnteredFull) {\r\n            fetchResidents()\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isAddressEnteredFull, addressId])\r\n\r\n    useEffect(()=>{\r\n        if (removeResidentError) {\r\n            message.error(`${removeResidentError} Произошла ошибка при удалении клиента`)\r\n        }\r\n        if (editResidentError) {\r\n            message.error(`${editResidentError} Произошла ошибка при редактировании`)\r\n        }        \r\n    },[removeResidentError, editResidentError])\r\n\r\n    const showModal = () => {\r\n        setModalShow(true)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setModalShow(false)\r\n        setEdetedResident({})\r\n      };\r\n\r\n    const submitHandler = (resident) => {\r\n        setModalShow(false)\r\n        if (resident.bindId === undefined) {\r\n            createResident(resident)\r\n        } else {\r\n            editResident(resident)\r\n            setEdetedResident({})\r\n        }\r\n        \r\n    }\r\n\r\n    const deleteHandler = (BindId) => {\r\n        removeResident(BindId)\r\n    }\r\n\r\n    const editHandler = (resident) => {\r\n        setEdetedResident(resident)\r\n        setModalShow(true)\r\n    }\r\n    \r\n    return (\r\n        <section className={cl.residentsSection}>\r\n            <h2>Жильцы</h2>\r\n            <div className={cl.residentsSection__wrapper}>\r\n                {isAddressEnteredFull \r\n                    ? <div>\r\n                        <div className={cl.residentSection__adressWrapper}>\r\n                            <p>{address}</p>\r\n                            <div className={cl.residentSection__addButton}>\r\n                                <Button \r\n                                    type=\"primary\" \r\n                                    shape=\"circle\" \r\n                                    icon={<UserAddOutlined />} \r\n                                    onClick={showModal}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {isResidentsLoading\r\n                            ? <Loader />\r\n                            : residentsLoadingError\r\n                                ? <p>Произошла ошибка при загрузке жильцов: {residentsLoadingError}</p>\r\n                                : residents.length>0 \r\n                                    ? <div className={cl.residentsSection__residentsList}>\r\n                                        {residents.map(resident => {\r\n                                            return (\r\n                                                <div key ={resident.id} className={cl.residentSection__residentItem}>\r\n                                                    <ResidentCard \r\n                                                        resident={resident}\r\n                                                        deleteHandler={deleteHandler}\r\n                                                        editHandler={editHandler}\r\n                                                    />\r\n                                                </div>\r\n                                            ) \r\n                                        })}\r\n                                    </div>\r\n                                    : <p>Здесь нет зарегистрированных жильцов</p>\r\n                        }\r\n                    </div>                        \r\n                    : <p>Введите адрес полностью, чтобу увидеть жильцов</p>\r\n                }            \r\n            </div>  \r\n            <AppModal \r\n                isModalShow={isModalShow}\r\n                submitHandler={submitHandler}\r\n                handleCancel={handleCancel} \r\n                editedResident={editedResident}\r\n                handledResident={editedResident}             \r\n            />\r\n        </section>\r\n    )\r\n}\r\n","import AddressSection from \"./components/AddressSection/AddressSection\";\r\nimport ResidentsSection from \"./components/ResidentsSection/ResidentsSection\";\r\nimport cl from './app.module.scss';\r\n\r\nexport default function App() {  \r\n\r\n  return (\r\n    <div className={cl.app}>     \r\n      <AddressSection />\r\n      <ResidentsSection />     \r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { addressReduser } from \"./addressReduser\";\r\nimport { residentsReduser } from \"./residentsReduser\";\r\n\r\n\r\nexport const rootReduser = combineReducers({\r\n    address: addressReduser,\r\n    residents: residentsReduser\r\n})\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReduser } from \"./redusers\";\r\n\r\nexport const store = createStore(rootReduser, applyMiddleware(thunk)) ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App.jsx';\r\nimport { store } from './store/index.js';\r\n\r\nReactDOM.render(\r\n  <Provider store ={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addressSection\":\"addressSection_addressSection__1RN0o\",\"addressSection__wrapper\":\"addressSection_addressSection__wrapper__19uGE\",\"addressSection__bigField\":\"addressSection_addressSection__bigField__bLWfm\",\"addressSection__smallField\":\"addressSection_addressSection__smallField__3wZ1b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"residentsSection\":\"residentsSection_residentsSection__12jW7\",\"residentsSection__residentsList\":\"residentsSection_residentsSection__residentsList__3bzEU\",\"residentSection__residentItem\":\"residentsSection_residentSection__residentItem__eLFmC\",\"residentSection__adressWrapper\":\"residentsSection_residentSection__adressWrapper__n6L2F\"};"],"sourceRoot":""}
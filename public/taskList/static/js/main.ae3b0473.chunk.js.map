{"version":3,"sources":["hooks/useWindowDimension.ts","components/Pagination/Pagination.tsx","components/TaskItem/TaskItem.tsx","components/TaskList/TaskList.tsx","context/index.ts","pages/MainPage/MainPage.tsx","pages/TaskPage/TaskPage.tsx","App.tsx","index.tsx","components/TaskItem/taskItem.module.scss","components/TaskList/taskList.module.scss","pages/MainPage/mainPage.module.scss","app.module.scss"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","AppPagination","totalCount","currentPage","itemPerView","setCurrentPage","setPagePerView","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","showTotal","total","onChange","page","pageSize","responsive","TaskItem","task","col","useRef","current","className","cl","taskItem","taskItem__desc","taskItem__col","id","Intl","DateTimeFormat","year","month","day","hour","minute","format","created_date","ref","order_type","name","created_user","surname","toUpperCase","patronymic","taskItem__topText","account","taskItem__bottomText","terminal","taskItem__statusCol","status","join","TaskList","tasks","taskList","taskList__header","taskList__date","taskList__author","taskList__account","taskList__status","taskList__list","map","taskList__item","to","defaultState","data","AppContext","createContext","MainPage","setPage","pagePerView","displayedTasks","detDisplayedTasks","useContext","slice","mainPage","mainPage__taskList","mainPage__pagination","Pagination","length","TaskPage","taskId","useParams","find","item","undefined","App","contextValue","Provider","value","app","path","element","ReactDOM","render","document","getElementById","module","exports"],"mappings":"iLAEA,SAASA,IACP,MAAmDC,OACnD,MAAO,CACLC,MAFF,EAAQC,WAGNC,OAHF,EAA2BC,a,WC+CdC,EApC4B,SAAC,GAA4E,IAA3EC,EAA0E,EAA1EA,WAAYC,EAA8D,EAA9DA,YAAaC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,eAExFT,EDNI,WACb,MAAgDU,mBAASZ,KAAzD,mBAAOa,EAAP,KAAyBC,EAAzB,KAWA,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBd,KAItB,OADAC,OAAOgB,iBAAiB,SAAUD,GAC3B,kBAAMf,OAAOiB,oBAAoB,SAAUF,MACjD,IAEIH,ECNWM,GAATjB,MAOP,SAASkB,EAAUC,GACf,OAAIpB,OAAOE,WAAa,IACd,wCAAN,QAAkBK,EAAY,GAAGC,EAAY,EAA7C,eAAqDD,EAAY,GAAGC,EAAYA,EAAhF,UAEO,KASf,OAlBAM,qBAAU,WACFb,EAAQ,KAAMkB,EAAUb,KAE7B,CAACL,IAee,IAAfK,EACO,KAIP,cAAC,IAAD,CACIc,MAAOd,EACPa,UAAWA,EACXE,SAbR,SAAkBC,EAAUC,GACxBd,EAAea,GACfZ,EAAea,IAYXC,YAAY,K,kCCQTC,EA9CsB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAC7BC,EAAMC,iBAA8B,MAU1C,OARAd,qBAAU,WACNd,OAAOgB,iBAAiB,UAAU,WAC1BW,EAAIE,cAOZ,sBAAKC,UAAWC,IAAGC,SAAnB,UACI,sBAAMF,UAAWC,IAAGE,eAApB,uEACA,sBAAKH,UAAWC,IAAGG,cAAnB,UACI,+BAAO,SAAIR,EAAKS,KAChB,+BAEQ,IAAIC,KAAKC,eAAe,KAAM,CAACC,KAAM,UAAWC,MAAO,UAAUC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,YAAYC,OAAOjB,EAAKkB,mBAI9I,sBAAMd,UAAWC,IAAGE,eAApB,4GACA,sBAAKH,UAAWC,IAAGG,cAAeW,IAAKlB,EAAvC,UACI,+BAAOD,EAAKoB,WAAWC,OACvB,+BAEQrB,EAAKsB,aAAaC,QAAU,IAC5BvB,EAAKsB,aAAaD,KAAK,GAAGG,cAAgB,IAC1CxB,EAAKsB,aAAaG,WAAW,GAAGD,cAAgB,SAI5D,sBAAMpB,UAAWC,IAAGE,eAApB,2GACA,sBAAKH,UAAWC,IAAGG,cAAnB,UACI,sBAAMJ,UAAWC,IAAGqB,kBAApB,SAAwC1B,EAAK2B,QAAQN,OACrD,sBAAMjB,UAAWC,IAAGuB,qBAApB,SAA2C5B,EAAK6B,SAASR,UAE7D,sBAAMjB,UAAWC,IAAGE,eAApB,kDACA,qBAAKH,UAAW,CAACC,IAAGyB,oBAAqBzB,IAAG,uBAAD,OAAwBL,EAAK+B,UAAWC,KAAK,KAAxF,SACG,+BAAOhC,EAAK+B,eCZZE,EA1B0B,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEvC,OACI,sBAAK9B,UAAWC,IAAG8B,SAAnB,UACI,sBAAK/B,UAAWC,IAAG+B,iBAAnB,UACI,qBAAKhC,UAAWC,IAAGgC,eAAnB,SAAmC,+FACnC,qBAAKjC,UAAWC,IAAGiC,iBAAnB,SAAqC,oIACrC,qBAAKlC,UAAWC,IAAGkC,kBAAnB,SAAsC,mIACtC,qBAAKnC,UAAWC,IAAGmC,iBAAnB,SAAqC,6EAEzC,oBAAIpC,UAAWC,IAAGoC,eAAlB,SACCP,EAAMQ,KAAI,SAAA1C,GAAI,OACX,oBAEII,UAAWC,IAAGsC,eAFlB,SAII,cAAC,IAAD,CAAMC,GAAE,gBAAW5C,EAAKS,IAAxB,SACI,cAAC,EAAD,CAAUT,KAAMA,OAJfA,EAAKS,a,iBCfxBoC,EAAyB,CAC3BC,KAAM,IAGGC,EAAaC,wBAAwBH,GCJnC,SAASI,IACpB,MAAwBhE,mBAAiB,GAAzC,mBAAOW,EAAP,KAAasD,EAAb,KACA,EAAsCjE,mBAAiB,IAAvD,mBAAOkE,EAAP,KAAoBnE,EAApB,KACA,EAA4CC,mBAAkB,IAA9D,mBAAOmE,EAAP,KAAuBC,EAAvB,KAEOP,EAAQQ,qBAAWP,GAAnBD,KAMP,OAJA1D,qBAAU,WACNiE,EAAkBP,EAAKS,OAAO3D,EAAK,GAAGuD,EAAavD,EAAKuD,MACzD,CAACvD,EAAMuD,EAAaL,IAGnB,sBAAK1C,UAAWC,IAAGmD,SAAnB,UACI,qGACA,qBAAKpD,UAAWC,IAAGoD,mBAAnB,SACI,cAAC,EAAD,CAAUvB,MAAOkB,MAErB,qBAAKhD,UAAWC,IAAGqD,qBAAnB,SACI,cAACC,EAAD,CACI/E,WAAYkE,EAAKc,OACjB/E,YAAae,EACbd,YAAaqE,EACbpE,eAAgBmE,EAChBlE,eAAgBA,SC1BrB,SAAS6E,IACpB,IACMC,EADSC,cACOtD,GAEhBT,EADWsD,qBAAWP,GAApBD,KACUkB,MAAK,SAAAC,GAAI,MAAI,UAAGA,EAAKxD,MAASqD,KAEhD,YAAeI,IAAXJ,QAAiCI,IAATlE,EAEpB,8BACMA,EAAK2B,QAAQN,OAKnB,yH,6BCQG8C,MAnBf,WAEE,IAAMC,EAAe,CACnBtB,KAAMA,GAER,OACE,cAACC,EAAWsB,SAAZ,CAAqBC,MAASF,EAA9B,SACE,cAAC,IAAD,UACE,qBAAKhE,UAAWC,IAAGkE,IAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACxB,EAAD,MACzB,cAAC,IAAD,CAAOuB,KAAK,YAAYC,QAAS,cAACZ,EAAD,gBCd7Ca,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U,mBCL1BC,EAAOC,QAAU,CAAC,SAAW,2BAA2B,eAAiB,iCAAiC,cAAgB,gCAAgC,oBAAsB,sCAAsC,wBAA0B,0CAA0C,8BAAgC,gDAAgD,6BAA+B,+CAA+C,gCAAkC,kDAAkD,4BAA8B,gD,mBCA1iBD,EAAOC,QAAU,CAAC,iBAAmB,mCAAmC,eAAiB,iCAAiC,eAAiB,iCAAiC,iBAAmB,mCAAmC,kBAAoB,oCAAoC,eAAiB,iCAAiC,iBAAmB,qC,mBCA/VD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,mBAAqB,uC,mBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB","file":"static/js/main.ae3b0473.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","\r\nimport { FC, useEffect } from 'react'\r\nimport { Pagination } from 'antd'\r\nimport 'antd/dist/antd.css';\r\nimport useWindowDimensions from '../../hooks/useWindowDimension';\r\n\r\ninterface IPagintionProps {\r\n    totalCount: number\r\n    currentPage: number\r\n    itemPerView: number\r\n    setCurrentPage: (page: number) => void\r\n    setPagePerView:  (pagePerView: number) => void\r\n}\r\n\r\nconst AppPagination: FC<IPagintionProps> = ({totalCount, currentPage, itemPerView, setCurrentPage, setPagePerView}) => {\r\n    \r\n    const {width} = useWindowDimensions()\r\n\r\n    useEffect(() => {\r\n        if (width > 450) {showTotal(totalCount)}\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [width])\r\n\r\n    function showTotal(total:number) {\r\n        if (window.innerWidth > 450) {\r\n            return `Записи ${(currentPage-1)*itemPerView+1} - ${(currentPage-1)*itemPerView+itemPerView} items`;\r\n        }else {\r\n            return null\r\n        }        \r\n    }\r\n\r\n    function onChange(page:any, pageSize:any) {\r\n        setCurrentPage(page)\r\n        setPagePerView(pageSize)\r\n    }\r\n\r\n    if (totalCount === 0) {\r\n        return null\r\n    } \r\n    \r\n    return (\r\n        <Pagination \r\n            total={totalCount} \r\n            showTotal={showTotal} \r\n            onChange={onChange}\r\n            responsive={true}            \r\n        />\r\n    );\r\n}\r\n\r\nexport default AppPagination;","import React, { FC, useEffect, useRef } from 'react'\r\nimport { ITask } from '../../types'\r\nimport cl from './taskItem.module.scss'\r\n\r\ninterface ITaskItemProps {\r\n    task: ITask\r\n}\r\nconst TaskItem: FC<ITaskItemProps> = ({task}) => {\r\n    const col = useRef<HTMLDivElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            if (col.current !== null) {\r\n            }\r\n            \r\n        })\r\n    })\r\n\r\n    return (\r\n        <div className={cl.taskItem}>\r\n            <span className={cl.taskItem__desc}>Номер / Дата</span>\r\n            <div className={cl.taskItem__col}>\r\n                <span>{'№'+task.id}</span>\r\n                <span>\r\n                    {\r\n                        new Intl.DateTimeFormat('ru', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit'}).format(task.created_date)\r\n                    }\r\n                </span>\r\n            </div>\r\n            <span className={cl.taskItem__desc}>Тип задания / Автор</span>\r\n            <div className={cl.taskItem__col} ref={col}>\r\n                <span>{task.order_type.name}</span>\r\n                <span>\r\n                    {\r\n                        task.created_user.surname + ' ' +\r\n                        task.created_user.name[0].toUpperCase() + '.' +\r\n                        task.created_user.patronymic[0].toUpperCase() + '.'\r\n                    }\r\n                </span>\r\n            </div>\r\n            <span className={cl.taskItem__desc}>Аккаунт / Терминал</span>\r\n            <div className={cl.taskItem__col}>\r\n                <span className={cl.taskItem__topText}>{task.account.name}</span>\r\n                <span className={cl.taskItem__bottomText}>{task.terminal.name}</span>\r\n            </div>\r\n            <span className={cl.taskItem__desc}>Статус</span>\r\n            <div className={[cl.taskItem__statusCol, cl[`taskItem__statusCol_${task.status}`]].join(' ')}>\r\n               <span>{task.status}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem","import React, { FC } from 'react'\r\nimport { ITask } from '../../types'\r\nimport cl from './taskList.module.scss'\r\nimport TaskItem from '../TaskItem/TaskItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface ITaskListPropsTypes {\r\n    tasks: ITask[]\r\n}\r\nconst TaskList:FC<ITaskListPropsTypes> = ({tasks}) => {\r\n\r\n    return (\r\n        <div className={cl.taskList}>\r\n            <div className={cl.taskList__header}>\r\n                <div className={cl.taskList__date}><span>Номер / Дата</span></div>\r\n                <div className={cl.taskList__author}><span>Тип задания / Автор</span></div>\r\n                <div className={cl.taskList__account}><span>Аккаунт / Терминал</span></div>\r\n                <div className={cl.taskList__status}><span>Статус</span></div>\r\n            </div> \r\n            <ul className={cl.taskList__list}>                       \r\n            {tasks.map(task => \r\n                <li \r\n                    key={task.id} \r\n                    className={cl.taskList__item}\r\n                >\r\n                    <Link to={`/task/${task.id}`}>\r\n                        <TaskItem task={task} />\r\n                    </Link>\r\n                </li>\r\n            )}\r\n        </ul>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default TaskList","import { createContext } from \"react\";\r\nimport { ITask } from '../types'\r\n\r\ninterface IContext {\r\n    data: ITask[]\r\n}\r\n\r\nconst defaultState: IContext = {\r\n    data: []\r\n}\r\n\r\nexport const AppContext = createContext<IContext>(defaultState);","import React, { useContext, useEffect, useState } from 'react'\r\nimport Pagination from '../../components/Pagination/Pagination'\r\nimport TaskList from '../../components/TaskList/TaskList'\r\nimport { ITask } from '../../types'\r\nimport cl from './mainPage.module.scss'\r\nimport { AppContext } from '../../context/index';\r\n\r\nexport default function MainPage() {\r\n    const [page, setPage] = useState<number>(1)\r\n    const [pagePerView, setPagePerView] = useState<number>(10)\r\n    const [displayedTasks, detDisplayedTasks] = useState<ITask[]>([])\r\n\r\n    const {data} = useContext(AppContext)\r\n\r\n    useEffect(() => {\r\n        detDisplayedTasks(data.slice((page-1)*pagePerView, page*pagePerView))\r\n    }, [page, pagePerView, data])\r\n\r\n    return (\r\n        <div className={cl.mainPage}>\r\n            <h1>Список задач</h1>\r\n            <div className={cl.mainPage__taskList}>\r\n                <TaskList tasks={displayedTasks}/>\r\n            </div>\r\n            <div className={cl.mainPage__pagination}>\r\n                <Pagination \r\n                    totalCount={data.length} \r\n                    currentPage={page}\r\n                    itemPerView={pagePerView}\r\n                    setCurrentPage={setPage}\r\n                    setPagePerView={setPagePerView}\r\n                />\r\n            </div>            \r\n            \r\n        </div> \r\n    )  \r\n}\r\n","import React, { useContext } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { AppContext } from '../../context/index';\r\n\r\nexport default function TaskPage() {\r\n    const params = useParams()\r\n    const taskId = params.id\r\n    const { data } = useContext(AppContext)\r\n    const task = data.find(item => `${item.id}` === taskId)\r\n\r\n    if (taskId !== undefined && task !== undefined) {\r\n        return (\r\n            <div>\r\n                 {task.account.name}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                Здесь ничего нет\r\n            </div>\r\n        ) \r\n    }    \r\n}\r\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport MainPage from './pages/MainPage/MainPage';\r\nimport TaskPage from './pages/TaskPage/TaskPage';\r\nimport cl from './app.module.scss';\r\nimport { AppContext } from './context/index';\r\nimport data from './data/data.json'\r\n\r\nfunction App() {\r\n\r\n  const contextValue = {\r\n    data: data\r\n  }\r\n  return (\r\n    <AppContext.Provider value = {contextValue}>\r\n      <BrowserRouter>\r\n        <div className={cl.app}>\r\n          <Routes>\r\n            <Route path=\"*\" element={<MainPage />} />\r\n            <Route path='/task/:id' element={<TaskPage />} />        \r\n          </Routes>  \r\n        </div>\r\n      </BrowserRouter>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskItem\":\"taskItem_taskItem__3hHBX\",\"taskItem__desc\":\"taskItem_taskItem__desc__3sz2b\",\"taskItem__col\":\"taskItem_taskItem__col__3s4E0\",\"taskItem__statusCol\":\"taskItem_taskItem__statusCol__2dv0p\",\"taskItem__statusCol_new\":\"taskItem_taskItem__statusCol_new__1Fkh-\",\"taskItem__statusCol_completed\":\"taskItem_taskItem__statusCol_completed__2YbYw\",\"taskItem__statusCol_declined\":\"taskItem_taskItem__statusCol_declined__21BYx\",\"taskItem__statusCol_assigned_to\":\"taskItem_taskItem__statusCol_assigned_to__ZVyX0\",\"taskItem__statusCol_started\":\"taskItem_taskItem__statusCol_started__2Z8NZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList__header\":\"taskList_taskList__header__2n6-S\",\"taskList__list\":\"taskList_taskList__list__2jERE\",\"taskList__item\":\"taskList_taskList__item__2xi9w\",\"taskList__author\":\"taskList_taskList__author__3hylm\",\"taskList__account\":\"taskList_taskList__account__hICWQ\",\"taskList__date\":\"taskList_taskList__date__1myhB\",\"taskList__status\":\"taskList_taskList__status__1EhhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"mainPage_mainPage__wejRn\",\"mainPage__taskList\":\"mainPage_mainPage__taskList__FDPfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__7R_HJ\"};"],"sourceRoot":""}